		Request Header                                  规定

		Accept                                  浏览器端接受的格式。
		Accept-Encoding:                        浏览器端接收的编码方式。
		Accept-Language                         浏览器端接受的语言，用于服务端判断多语言。
		Cache-Control                           控制缓存的时效性。
		connection                              连接方式，如果是keep-alive，且服务端支持，则会复用连接。
		Host                                    HTTP访问使用的域名。
		lf-Modified-Since                       上次访问时的更改时间,如果服务端认为此时间后自己没有更新，则会给出304响应。
		lf-None-Match                           次访问时使用的E-Tag，通常是页面的信息摘要，这个比更改时间更准确一些。
		User-Agent                              客户端标识，因为一些历史原因，这是一笔糊涂账，多数浏览器的这个字段都十分复杂,区别十分微妙。
		Cookie                                  客户端存储的cookie字符串。


		Response Header                                  规定

		Cache-Control                           缓存控制，用于通知各级缓存保存的时间，例如max-age=o，表示不要缓存。
		connection                              连接类型,Keep-Alive表示复用连接。
		Content-Encoding                        内容编码方式，通常是gzip。
		Content-Length                          内容的长度，有利于浏览器判断内容是否已经结束。
		Content-Type                            内容类型，所有请求网页的都是text/html。
		Date                                    当前的服务器日期。
		ETag                                    页面的信息摘要,用于判断是否需要重新到服务端取回页面。
		Expires                                 过期时间，用于判断下次请求是否需要到服务端取回页面。
		Keep-Alive                              保持连接不断时需要的一些信息，如timeout=5, max=100。
		Last-Modified                           页面上次修改的时间。
		Server                                  服务端软件的类型。
		Set-Cookie                              设置cookie，可以存在多个。
		Via                                     服务端的请求链路，对一些调试场景至关重要的一个头。
